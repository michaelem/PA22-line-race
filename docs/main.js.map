{
  "version": 3,
  "sources": ["../src/player.ts", "../src/level.ts", "../src/end-screen.ts", "../src/pause-overlay.ts", "../src/menu-screen.ts", "../src/main.ts"],
  "sourcesContent": ["import { Point, DrawScale } from \"./drawing\";\nexport default class Player {\n  name: string;\n  positionX: number;\n  positionY: number;\n  targetY: number;\n  movementTimer: number;\n  speed: number;\n  context: CanvasRenderingContext2D;\n  color: string;\n  trail: Point[];\n  upKeyCode: string;\n  downKeyCode: string;\n\n  constructor(\n    name: string,\n    color: string,\n    context: CanvasRenderingContext2D,\n    startY: number,\n    upKeyCode: string,\n    downKeyCode: string\n  ) {\n    this.name = name;\n    this.speed = 50;\n    this.positionX = 200;\n    this.positionY = startY;\n    this.targetY = startY;\n    this.movementTimer = 0;\n    this.context = context;\n    this.color = color;\n    this.upKeyCode = upKeyCode;\n    this.downKeyCode = downKeyCode;\n\n    this.trail = [{ x: 0, y: startY }];\n  }\n\n  static createPlayer(context: CanvasRenderingContext2D) {\n    return [\n      new Player(\"right player\", \"orange\", context, 200, \"ArrowUp\", \"ArrowDown\")\n    ]\n  }\n\n  static createPlayers(context: CanvasRenderingContext2D) {\n    return [\n      new Player(\"right player\", \"orange\", context, 190, \"ArrowUp\", \"ArrowDown\"),\n      new Player(\"left player\", \"green\", context, 210, \"KeyW\", \"KeyS\"),\n    ]\n  }\n\n  maxedOutMovement(): boolean {\n    // return Math.abs(this.targetY - this.positionY) >= 1;\n    return this.movementTimer > 0;\n  }\n\n  moveUp() {\n    if (!this.maxedOutMovement()) {\n      this.movementTimer = 0.25;\n      this.targetY = this.targetY - 10;\n    }\n  }\n\n  moveDown() {\n    if (!this.maxedOutMovement()) {\n      this.movementTimer = 0.25;\n      this.targetY = this.targetY + 10;\n    }\n  }\n\n  update(dt: number) {\n    this.trail.push({ x: this.positionX, y: this.positionY });\n    this.positionX = this.positionX + this.speed * dt;\n    let speed: number;\n\n    if (Math.abs(this.targetY - this.positionY) > 0) {\n      speed =\n        (this.speed - 30) *\n        (Math.cos((this.movementTimer / 0.25) * Math.PI) + 1);\n\n      if (this.targetY - this.positionY > 0) {\n        this.positionY = Math.min(this.targetY, this.positionY + speed * dt);\n      } else {\n        this.positionY = Math.max(this.targetY, this.positionY - speed * dt);\n      }\n    } else {\n      speed = this.speed;\n    }\n\n    this.positionX = this.positionX + speed * dt;\n\n    if (this.movementTimer > 0) {\n      this.movementTimer = this.movementTimer - dt;\n    }\n  }\n\n  draw(viewPosition: number, drawScale: DrawScale) {\n    const ctx = this.context;\n    ctx.resetTransform();\n\n    this.drawTrail(viewPosition, drawScale);\n  }\n\n  drawTrail(viewPosition: number, drawScale: DrawScale) {\n    this.cutTrail(viewPosition);\n\n    const ctx = this.context;\n\n    ctx.beginPath();\n    ctx.lineWidth = 2 * drawScale.yScale;\n    ctx.moveTo(\n      (this.trail[0].x - viewPosition) * drawScale.xScale,\n      this.trail[0].y * drawScale.yScale\n    );\n\n    for (let point of this.trail) {\n      ctx.lineTo(\n        (point.x - viewPosition) * drawScale.xScale,\n        point.y * drawScale.yScale\n      );\n    }\n\n    ctx.strokeStyle = this.color;\n    ctx.stroke();\n  }\n\n  cutTrail(viewPosition: number) {\n    this.trail = this.trail.filter((point) => point.x >= viewPosition - 200);\n  }\n}\n", "import { DrawScale } from \"./drawing\";\n\n\nexport default class Level {\n  context: CanvasRenderingContext2D;\n  startLine: number = 2400;\n  end: number = 4300;\n  squares: Square[] = [\n    { x: 0, y: 0, size: 50 },\n    { x: 0, y: 400, size: 50 },\n    { x: 200, y: 400, size: 50 },\n    { x: 200, y: 0, size: 50 },\n    { x: 400, y: 400, size: 50 },\n    { x: 400, y: 0, size: 50 },\n    { x: 600, y: 400, size: 50 },\n    { x: 600, y: 0, size: 50 },\n    { x: 800, y: 400, size: 50 },\n    { x: 800, y: 0, size: 50 },\n    { x: 1000, y: 400, size: 50 },\n    { x: 1000, y: 0, size: 50 },\n    { x: 1200, y: 400, size: 50 },\n    { x: 1200, y: 0, size: 50 },\n    { x: 1400, y: 400, size: 50 },\n    { x: 1400, y: 0, size: 50 },\n    { x: 1600, y: 400, size: 50 },\n    { x: 1600, y: 0, size: 50 },\n    { x: 1620, y: 200, size: 50 },\n    { x: 1800, y: 400, size: 50 },\n    { x: 1800, y: 0, size: 50 },\n    { x: 2000, y: 400, size: 50 },\n    { x: 2000, y: 0, size: 50 },\n    { x: 2200, y: 0, size: 50 },\n    { x: 2200, y: 400, size: 50 },\n    { x: 2400, y: 0, size: 100 },\n    { x: 2400, y: 400, size: 100 },\n    { x: 2600, y: 200, size: 50 },\n    { x: 2600, y: 0, size: 100 },\n    { x: 2600, y: 400, size: 100 },\n    { x: 2750, y: 320, size: 80 },\n    { x: 2750, y: 200, size: 80 },\n    { x: 2750, y: 80, size: 80 },\n    { x: 2900, y: 400, size: 100 },\n    { x: 2900, y: 200, size: 100 },\n    { x: 2900, y: 0, size: 100 },\n    { x: 3300, y: 0, size: 350 },\n    { x: 3300, y: 400, size: 350 },\n    { x: 3800, y: 200, size: 150 },\n    { x: 3800, y: 0, size: 150 },\n    { x: 3800, y: 400, size: 150 },\n  ];\n\n  constructor(context: CanvasRenderingContext2D) {\n    this.context = context;\n  }\n\n  collide(x: number, y: number): boolean {\n    for (let square of this.squares) {\n      const squareX = square.x - square.size / 2;\n\n      if (x >= squareX && x <= squareX + square.size) {\n        const squareY = square.y - square.size / 2;\n\n        if (y >= squareY && y <= squareY + square.size) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  finish(x: number) {\n    return x >= this.end;\n  }\n\n  draw(viewPosition: number, drawScale: DrawScale) {\n    const ctx = this.context;\n    ctx.lineWidth = 2 * drawScale.yScale;\n    for (let square of this.squares) {\n      const x = square.x - square.size / 2 - viewPosition;\n      const y = square.y - square.size / 2;\n      ctx.strokeStyle = \"white\";\n      ctx.strokeRect(\n        x * drawScale.xScale,\n        y * drawScale.yScale,\n        square.size * drawScale.xScale,\n        square.size * drawScale.yScale\n      );\n    }\n\n    if (viewPosition < 2500) {\n      ctx.font = `${30 * drawScale.yScale}px sans-serif`;\n      ctx.textAlign = \"left\";\n\n      ctx.fillStyle = \"green\";\n      ctx.fillText(\n        \"Left is green\",\n        (400 - viewPosition) * drawScale.xScale,\n        300 * drawScale.yScale\n      );\n      ctx.fillText(\n        \"Use 'w' and 's' to move\",\n        (800 - viewPosition) * drawScale.xScale,\n        300 * drawScale.yScale\n      );\n\n      ctx.fillStyle = \"orange\";\n      ctx.fillText(\n        \"Right is orange\",\n        (400 - viewPosition) * drawScale.xScale,\n        130 * drawScale.yScale\n      );\n      ctx.fillText(\n        \"Use 'up' and 'down' to move\",\n        (800 - viewPosition) * drawScale.xScale,\n        130 * drawScale.yScale\n      );\n\n      ctx.fillStyle = \"grey\";\n      ctx.fillText(\n        `avoid the squares =>`,\n        (1300 - viewPosition) * drawScale.xScale,\n        210 * drawScale.yScale\n      );\n\n      ctx.fillStyle = \"grey\";\n      ctx.fillText(\n        `get to finish first!`,\n        (1900 - viewPosition) * drawScale.xScale,\n        210 * drawScale.yScale\n      );\n\n      ctx.beginPath();\n      ctx.moveTo(\n        (this.startLine - viewPosition) * drawScale.xScale,\n        50 * drawScale.yScale\n      );\n      ctx.lineTo(\n        (this.startLine - viewPosition) * drawScale.xScale,\n        350 * drawScale.yScale\n      );\n      ctx.strokeStyle = \"grey\";\n      ctx.stroke();\n    }\n    ctx.beginPath();\n    ctx.moveTo((4300 - viewPosition) * drawScale.xScale, 0 * drawScale.yScale);\n    ctx.lineTo(\n      (4300 - viewPosition) * drawScale.xScale,\n      400 * drawScale.yScale\n    );\n    ctx.strokeStyle = \"grey\";\n    ctx.stroke();\n  }\n}\n\ninterface Square {\n  x: number;\n  y: number;\n  size: number;\n}\n", "import { DrawScale } from \"./drawing\";\n\nexport default class EndScreen {\n  constructor(private context: CanvasRenderingContext2D) {}\n\n  draw(text: string, fillStyle: string, drawScale: DrawScale) {\n    const ctx = this.context;\n\n    ctx.fillStyle = fillStyle;\n    ctx.fillRect(0, 0, 400 * drawScale.xScale, 400 * drawScale.yScale);\n\n    ctx.font = `${30 * drawScale.yScale}px sans-serif`;\n    ctx.textAlign = \"center\";\n    ctx.fillStyle = \"black\";\n    ctx.fillText(\n      text,\n      200 * drawScale.xScale,\n      200 * drawScale.yScale\n    );\n\n    ctx.font = `${20 * drawScale.yScale}px sans-serif`;\n    ctx.fillText(\n      \"press 'r' to restart\",\n      200 * drawScale.xScale,\n      230 * drawScale.yScale\n    );\n    return;\n  }\n}\n", "import { DrawScale } from \"./drawing\";\n\nexport default class PauseOverlay {\n  constructor(private context: CanvasRenderingContext2D) {}\n\n  draw(drawScale: DrawScale) {\n    const ctx = this.context;\n    ctx.fillStyle = \"rgba(20,20,20,0.8)\";\n    ctx.fillRect(0, 0, 400 * drawScale.xScale, 400 * drawScale.yScale);\n\n    ctx.globalAlpha = 2.0;\n\n    ctx.font = `${30 * drawScale.yScale}px sans-serif`;\n    ctx.textAlign = \"center\";\n    ctx.fillStyle = \"white\";\n    ctx.fillText(`paused`, 200 * drawScale.xScale, 200 * drawScale.yScale);\n  }\n}\n", "import { DrawScale } from \"./drawing\";\n\ninterface MenuItem {\n  key: string;\n  title: string;\n  color: string;\n}\n\nconst menu: MenuItem[] = [\n  { key: \"start-1-p\", title: \"start single player game\", color: \"orange\" },\n  { key: \"start-2-p\", title: \"start two player game\", color: \"green\" },\n];\n\nconst spacing = 28;\n\nexport default class MenuScreen {\n  selected: string = menu[0].key;\n\n  constructor(private context: CanvasRenderingContext2D) {}\n\n  draw(drawScale: DrawScale) {\n    const ctx = this.context;\n\n    ctx.fillStyle = \"black\";\n    ctx.fillRect(0, 0, 400 * drawScale.xScale, 400 * drawScale.yScale);\n\n    ctx.font = `${spacing * drawScale.yScale}px sans-serif`;\n    ctx.textAlign = \"left\";\n\n    const start = 200 - (menu.length * spacing) / 2;\n\n    menu.forEach((menuItem: MenuItem, index: number) => {\n      if (this.selected == menuItem.key) {\n        ctx.fillStyle = menuItem.color;\n      } else {\n        ctx.fillStyle = \"grey\";\n      }\n      ctx.fillText(\n        menuItem.title,\n        spacing * drawScale.xScale,\n        (start + (index + 1) * spacing) * drawScale.yScale\n      );\n    });\n\n    return;\n  }\n\n  handleKey(key: string): string  {\n    let index = menu.findIndex((e) => e.key == this.selected);\n    let result = \"stay\";\n\n    switch (key) {\n      case \"Enter\": {\n        result = this.selected;\n        break;\n      }\n      case \"ArrowUp\": {\n        if (index > 0) {\n          index = index - 1;\n        }\n        break;\n      }\n      case \"ArrowDown\": {\n        if (index < menu.length) {\n          index = index + 1;\n        }\n        break;\n      }\n    }\n\n    this.selected = menu[index].key;\n    return result;\n  }\n}\n", "import Player from \"./player\";\nimport Level from \"./level\";\nimport EndScreen from \"./end-screen\";\nimport PauseOverlay from \"./pause-overlay\";\nimport MenuScreen from \"./menu-screen\";\nimport { Point, DrawScale } from \"./drawing\";\n\nenum State {\n  \"menu\",\n  \"running\",\n  \"paused\",\n  \"lost\",\n  \"won\",\n}\n\n// game variables\nvar players: Player[];\nvar viewPosition: number;\nvar level: Level;\n\nvar state: State = State.menu;\nvar lastGameMode: string = \"start-1-p\";\nvar looser: string;\nvar winner: string;\nvar endScreen: EndScreen;\nvar menuScreen: MenuScreen;\n\n// system variables\nvar canvas: HTMLCanvasElement;\nvar context: CanvasRenderingContext2D;\nvar last_tick_t = 0;\nvar width: number;\nvar height: number;\nvar drawScale: DrawScale;\n\nfunction draw() {\n  context.resetTransform();\n\n  if (state == State.menu) {\n    menuScreen.draw(drawScale);\n    return;\n  }\n\n  if (state == State.lost) {\n    endScreen.draw(`\uD83D\uDE48 ${looser} lost`, \"red\", drawScale);\n    return;\n  }\n\n  if (state == State.won) {\n    endScreen.draw(`\uD83D\uDE80 ${winner} won`, \"green\", drawScale);\n    return;\n  }\n\n  context.clearRect(0, 0, width, height);\n  context.fillStyle = \"black\";\n  context.fillRect(0, 0, width, height);\n\n  level.draw(viewPosition, drawScale);\n  for (let player of players) {\n    player.draw(viewPosition, drawScale);\n  }\n\n  if (state == State.paused) {\n    const overlay = new PauseOverlay(context);\n    overlay.draw(drawScale);\n  }\n}\n\nfunction update(dt: number) {\n  if (state != State.running) {\n    return;\n  }\n\n  for (let player of players) {\n    player.update(dt);\n  }\n\n  // Center viewport on average player position:\n  const averagePosition =\n    players.reduce((total, next) => total + next.positionX, 0) / players.length;\n  viewPosition = averagePosition - 200;\n\n  for (let player of players) {\n    if (level.collide(player.positionX, player.positionY)) {\n      state = State.lost;\n      looser = player.name;\n    }\n  }\n\n  for (let player of players) {\n    if (level.finish(player.positionX)) {\n      state = State.won;\n      winner = player.name;\n    }\n  }\n}\n\nfunction loop(t_ms: number) {\n  // calculate dt\n  let dt = t_ms - last_tick_t;\n  last_tick_t = t_ms;\n\n  update(dt / 1000); // to seconds\n  draw();\n\n  window.requestAnimationFrame(loop);\n}\n\nfunction resized() {\n  const wWidth = window.innerWidth;\n  const wHeight = window.innerHeight;\n  if (wWidth > wHeight) {\n    width = wHeight;\n    height = wHeight;\n  } else {\n    width = wWidth;\n    height = wWidth;\n  }\n  canvas.width = width;\n  canvas.height = height;\n\n  drawScale = { xScale: width / 400, yScale: height / 400 };\n}\n\nfunction keyDownListner(event: KeyboardEvent) {\n  if (state == State.menu) {\n    lastGameMode = menuScreen.handleKey(event.code);\n    switch (lastGameMode) {\n      case \"start-1-p\": {\n        players = Player.createPlayer(context);\n        state = State.running;\n        break;\n      }\n      case \"start-2-p\": {\n        players = Player.createPlayers(context);\n        state = State.running;\n        break;\n      }\n    }\n    return;\n  }\n\n  if (event.code == \"Space\") {\n    if (state == State.running) {\n      state = State.paused;\n    } else {\n      state = State.running;\n    }\n  }\n\n  for (let player of players) {\n    if (event.code == player.upKeyCode) {\n      player.moveUp();\n    }\n    if (event.code == player.downKeyCode) {\n      player.moveDown();\n    }\n  }\n\n  if (event.code == \"KeyR\" && (state == State.won || state == State.lost)) {\n    switch (lastGameMode) {\n      case \"start-1-p\": {\n        players = Player.createPlayer(context);\n        break;\n      }\n      case \"start-2-p\": {\n        players = Player.createPlayers(context);\n        break;\n      }\n    }\n\n    for (let player of players) {\n      player.positionX = level.startLine;\n    }\n    state = State.running;\n  }\n}\n\nfunction main() {\n  canvas = document.getElementById(\"canvas\") as HTMLCanvasElement;\n  width = canvas.width;\n  height = canvas.height;\n\n  viewPosition = 200;\n\n  context = canvas.getContext(\"2d\")!;\n  window.addEventListener(\"keydown\", keyDownListner);\n  window.addEventListener(\"resize\", resized);\n  resized();\n\n  players = Player.createPlayers(context);\n  level = new Level(context);\n  endScreen = new EndScreen(context);\n\n  menuScreen = new MenuScreen(context);\n\n  loop(performance.now());\n}\n\nmain();\n"],
  "mappings": "MACA,WAA4B,CAa1B,YACE,EACA,EACA,EACA,EACA,EACA,EACA,CACA,KAAK,KAAO,EACZ,KAAK,MAAQ,GACb,KAAK,UAAY,IACjB,KAAK,UAAY,EACjB,KAAK,QAAU,EACf,KAAK,cAAgB,EACrB,KAAK,QAAU,EACf,KAAK,MAAQ,EACb,KAAK,UAAY,EACjB,KAAK,YAAc,EAEnB,KAAK,MAAQ,CAAC,CAAE,EAAG,EAAG,EAAG,CAAO,CAAC,CACnC,OAEO,cAAa,EAAmC,CACrD,MAAO,CACL,GAAI,GAAO,eAAgB,SAAU,EAAS,IAAK,UAAW,WAAW,CAC3E,CACF,OAEO,eAAc,EAAmC,CACtD,MAAO,CACL,GAAI,GAAO,eAAgB,SAAU,EAAS,IAAK,UAAW,WAAW,EACzE,GAAI,GAAO,cAAe,QAAS,EAAS,IAAK,OAAQ,MAAM,CACjE,CACF,CAEA,kBAA4B,CAE1B,MAAO,MAAK,cAAgB,CAC9B,CAEA,QAAS,CACP,AAAK,KAAK,iBAAiB,GACzB,MAAK,cAAgB,IACrB,KAAK,QAAU,KAAK,QAAU,GAElC,CAEA,UAAW,CACT,AAAK,KAAK,iBAAiB,GACzB,MAAK,cAAgB,IACrB,KAAK,QAAU,KAAK,QAAU,GAElC,CAEA,OAAO,EAAY,CACjB,KAAK,MAAM,KAAK,CAAE,EAAG,KAAK,UAAW,EAAG,KAAK,SAAU,CAAC,EACxD,KAAK,UAAY,KAAK,UAAY,KAAK,MAAQ,EAC/C,GAAI,GAEJ,AAAI,KAAK,IAAI,KAAK,QAAU,KAAK,SAAS,EAAI,EAC5C,GACG,MAAK,MAAQ,IACb,MAAK,IAAK,KAAK,cAAgB,IAAQ,KAAK,EAAE,EAAI,GAErD,AAAI,KAAK,QAAU,KAAK,UAAY,EAClC,KAAK,UAAY,KAAK,IAAI,KAAK,QAAS,KAAK,UAAY,EAAQ,CAAE,EAEnE,KAAK,UAAY,KAAK,IAAI,KAAK,QAAS,KAAK,UAAY,EAAQ,CAAE,GAGrE,EAAQ,KAAK,MAGf,KAAK,UAAY,KAAK,UAAY,EAAQ,EAEtC,KAAK,cAAgB,GACvB,MAAK,cAAgB,KAAK,cAAgB,EAE9C,CAEA,KAAK,EAAsB,EAAsB,CAE/C,AADY,KAAK,QACb,eAAe,EAEnB,KAAK,UAAU,EAAc,CAAS,CACxC,CAEA,UAAU,EAAsB,EAAsB,CACpD,KAAK,SAAS,CAAY,EAE1B,GAAM,GAAM,KAAK,QAEjB,EAAI,UAAU,EACd,EAAI,UAAY,EAAI,EAAU,OAC9B,EAAI,OACD,MAAK,MAAM,GAAG,EAAI,GAAgB,EAAU,OAC7C,KAAK,MAAM,GAAG,EAAI,EAAU,MAC9B,EAEA,OAAS,KAAS,MAAK,MACrB,EAAI,OACD,GAAM,EAAI,GAAgB,EAAU,OACrC,EAAM,EAAI,EAAU,MACtB,EAGF,EAAI,YAAc,KAAK,MACvB,EAAI,OAAO,CACb,CAEA,SAAS,EAAsB,CAC7B,KAAK,MAAQ,KAAK,MAAM,OAAO,AAAC,GAAU,EAAM,GAAK,EAAe,GAAG,CACzE,CACF,EC5HA,WAA2B,CAgDzB,YAAY,EAAmC,CA9C/C,eAAoB,KACpB,SAAc,KACd,aAAoB,CAClB,CAAE,EAAG,EAAG,EAAG,EAAG,KAAM,EAAG,EACvB,CAAE,EAAG,EAAG,EAAG,IAAK,KAAM,EAAG,EACzB,CAAE,EAAG,IAAK,EAAG,IAAK,KAAM,EAAG,EAC3B,CAAE,EAAG,IAAK,EAAG,EAAG,KAAM,EAAG,EACzB,CAAE,EAAG,IAAK,EAAG,IAAK,KAAM,EAAG,EAC3B,CAAE,EAAG,IAAK,EAAG,EAAG,KAAM,EAAG,EACzB,CAAE,EAAG,IAAK,EAAG,IAAK,KAAM,EAAG,EAC3B,CAAE,EAAG,IAAK,EAAG,EAAG,KAAM,EAAG,EACzB,CAAE,EAAG,IAAK,EAAG,IAAK,KAAM,EAAG,EAC3B,CAAE,EAAG,IAAK,EAAG,EAAG,KAAM,EAAG,EACzB,CAAE,EAAG,IAAM,EAAG,IAAK,KAAM,EAAG,EAC5B,CAAE,EAAG,IAAM,EAAG,EAAG,KAAM,EAAG,EAC1B,CAAE,EAAG,KAAM,EAAG,IAAK,KAAM,EAAG,EAC5B,CAAE,EAAG,KAAM,EAAG,EAAG,KAAM,EAAG,EAC1B,CAAE,EAAG,KAAM,EAAG,IAAK,KAAM,EAAG,EAC5B,CAAE,EAAG,KAAM,EAAG,EAAG,KAAM,EAAG,EAC1B,CAAE,EAAG,KAAM,EAAG,IAAK,KAAM,EAAG,EAC5B,CAAE,EAAG,KAAM,EAAG,EAAG,KAAM,EAAG,EAC1B,CAAE,EAAG,KAAM,EAAG,IAAK,KAAM,EAAG,EAC5B,CAAE,EAAG,KAAM,EAAG,IAAK,KAAM,EAAG,EAC5B,CAAE,EAAG,KAAM,EAAG,EAAG,KAAM,EAAG,EAC1B,CAAE,EAAG,IAAM,EAAG,IAAK,KAAM,EAAG,EAC5B,CAAE,EAAG,IAAM,EAAG,EAAG,KAAM,EAAG,EAC1B,CAAE,EAAG,KAAM,EAAG,EAAG,KAAM,EAAG,EAC1B,CAAE,EAAG,KAAM,EAAG,IAAK,KAAM,EAAG,EAC5B,CAAE,EAAG,KAAM,EAAG,EAAG,KAAM,GAAI,EAC3B,CAAE,EAAG,KAAM,EAAG,IAAK,KAAM,GAAI,EAC7B,CAAE,EAAG,KAAM,EAAG,IAAK,KAAM,EAAG,EAC5B,CAAE,EAAG,KAAM,EAAG,EAAG,KAAM,GAAI,EAC3B,CAAE,EAAG,KAAM,EAAG,IAAK,KAAM,GAAI,EAC7B,CAAE,EAAG,KAAM,EAAG,IAAK,KAAM,EAAG,EAC5B,CAAE,EAAG,KAAM,EAAG,IAAK,KAAM,EAAG,EAC5B,CAAE,EAAG,KAAM,EAAG,GAAI,KAAM,EAAG,EAC3B,CAAE,EAAG,KAAM,EAAG,IAAK,KAAM,GAAI,EAC7B,CAAE,EAAG,KAAM,EAAG,IAAK,KAAM,GAAI,EAC7B,CAAE,EAAG,KAAM,EAAG,EAAG,KAAM,GAAI,EAC3B,CAAE,EAAG,KAAM,EAAG,EAAG,KAAM,GAAI,EAC3B,CAAE,EAAG,KAAM,EAAG,IAAK,KAAM,GAAI,EAC7B,CAAE,EAAG,KAAM,EAAG,IAAK,KAAM,GAAI,EAC7B,CAAE,EAAG,KAAM,EAAG,EAAG,KAAM,GAAI,EAC3B,CAAE,EAAG,KAAM,EAAG,IAAK,KAAM,GAAI,CAC/B,EAGE,KAAK,QAAU,CACjB,CAEA,QAAQ,EAAW,EAAoB,CACrC,OAAS,KAAU,MAAK,QAAS,CAC/B,GAAM,GAAU,EAAO,EAAI,EAAO,KAAO,EAEzC,GAAI,GAAK,GAAW,GAAK,EAAU,EAAO,KAAM,CAC9C,GAAM,GAAU,EAAO,EAAI,EAAO,KAAO,EAEzC,GAAI,GAAK,GAAW,GAAK,EAAU,EAAO,KACxC,MAAO,EAEX,CACF,CACA,MAAO,EACT,CAEA,OAAO,EAAW,CAChB,MAAO,IAAK,KAAK,GACnB,CAEA,KAAK,EAAsB,EAAsB,CAC/C,GAAM,GAAM,KAAK,QACjB,EAAI,UAAY,EAAI,EAAU,OAC9B,OAAS,KAAU,MAAK,QAAS,CAC/B,GAAM,GAAI,EAAO,EAAI,EAAO,KAAO,EAAI,EACjC,EAAI,EAAO,EAAI,EAAO,KAAO,EACnC,EAAI,YAAc,QAClB,EAAI,WACF,EAAI,EAAU,OACd,EAAI,EAAU,OACd,EAAO,KAAO,EAAU,OACxB,EAAO,KAAO,EAAU,MAC1B,CACF,CAEA,AAAI,EAAe,MACjB,GAAI,KAAO,GAAG,GAAK,EAAU,sBAC7B,EAAI,UAAY,OAEhB,EAAI,UAAY,QAChB,EAAI,SACF,gBACC,KAAM,GAAgB,EAAU,OACjC,IAAM,EAAU,MAClB,EACA,EAAI,SACF,0BACC,KAAM,GAAgB,EAAU,OACjC,IAAM,EAAU,MAClB,EAEA,EAAI,UAAY,SAChB,EAAI,SACF,kBACC,KAAM,GAAgB,EAAU,OACjC,IAAM,EAAU,MAClB,EACA,EAAI,SACF,8BACC,KAAM,GAAgB,EAAU,OACjC,IAAM,EAAU,MAClB,EAEA,EAAI,UAAY,OAChB,EAAI,SACF,uBACC,MAAO,GAAgB,EAAU,OAClC,IAAM,EAAU,MAClB,EAEA,EAAI,UAAY,OAChB,EAAI,SACF,uBACC,MAAO,GAAgB,EAAU,OAClC,IAAM,EAAU,MAClB,EAEA,EAAI,UAAU,EACd,EAAI,OACD,MAAK,UAAY,GAAgB,EAAU,OAC5C,GAAK,EAAU,MACjB,EACA,EAAI,OACD,MAAK,UAAY,GAAgB,EAAU,OAC5C,IAAM,EAAU,MAClB,EACA,EAAI,YAAc,OAClB,EAAI,OAAO,GAEb,EAAI,UAAU,EACd,EAAI,OAAQ,MAAO,GAAgB,EAAU,OAAQ,EAAI,EAAU,MAAM,EACzE,EAAI,OACD,MAAO,GAAgB,EAAU,OAClC,IAAM,EAAU,MAClB,EACA,EAAI,YAAc,OAClB,EAAI,OAAO,CACb,CACF,ECtJA,WAA+B,CAC7B,YAAoB,EAAmC,CAAnC,cAAoC,CAExD,KAAK,EAAc,EAAmB,EAAsB,CAC1D,GAAM,GAAM,KAAK,QAEjB,EAAI,UAAY,EAChB,EAAI,SAAS,EAAG,EAAG,IAAM,EAAU,OAAQ,IAAM,EAAU,MAAM,EAEjE,EAAI,KAAO,GAAG,GAAK,EAAU,sBAC7B,EAAI,UAAY,SAChB,EAAI,UAAY,QAChB,EAAI,SACF,EACA,IAAM,EAAU,OAChB,IAAM,EAAU,MAClB,EAEA,EAAI,KAAO,GAAG,GAAK,EAAU,sBAC7B,EAAI,SACF,uBACA,IAAM,EAAU,OAChB,IAAM,EAAU,MAClB,CAEF,CACF,EC1BA,WAAkC,CAChC,YAAoB,EAAmC,CAAnC,cAAoC,CAExD,KAAK,EAAsB,CACzB,GAAM,GAAM,KAAK,QACjB,EAAI,UAAY,qBAChB,EAAI,SAAS,EAAG,EAAG,IAAM,EAAU,OAAQ,IAAM,EAAU,MAAM,EAEjE,EAAI,YAAc,EAElB,EAAI,KAAO,GAAG,GAAK,EAAU,sBAC7B,EAAI,UAAY,SAChB,EAAI,UAAY,QAChB,EAAI,SAAS,SAAU,IAAM,EAAU,OAAQ,IAAM,EAAU,MAAM,CACvE,CACF,ECTA,GAAM,GAAmB,CACvB,CAAE,IAAK,YAAa,MAAO,2BAA4B,MAAO,QAAS,EACvE,CAAE,IAAK,YAAa,MAAO,wBAAyB,MAAO,OAAQ,CACrE,EAEM,EAAU,GAEhB,OAAgC,CAG9B,YAAoB,EAAmC,CAAnC,eAFpB,cAAmB,EAAK,GAAG,GAE6B,CAExD,KAAK,EAAsB,CACzB,GAAM,GAAM,KAAK,QAEjB,EAAI,UAAY,QAChB,EAAI,SAAS,EAAG,EAAG,IAAM,EAAU,OAAQ,IAAM,EAAU,MAAM,EAEjE,EAAI,KAAO,GAAG,EAAU,EAAU,sBAClC,EAAI,UAAY,OAEhB,GAAM,GAAQ,IAAO,EAAK,OAAS,EAAW,EAE9C,EAAK,QAAQ,CAAC,EAAoB,IAAkB,CAClD,AAAI,KAAK,UAAY,EAAS,IAC5B,EAAI,UAAY,EAAS,MAEzB,EAAI,UAAY,OAElB,EAAI,SACF,EAAS,MACT,EAAU,EAAU,OACnB,GAAS,GAAQ,GAAK,GAAW,EAAU,MAC9C,CACF,CAAC,CAGH,CAEA,UAAU,EAAsB,CAC9B,GAAI,GAAQ,EAAK,UAAU,AAAC,GAAM,EAAE,KAAO,KAAK,QAAQ,EACpD,EAAS,OAEb,OAAQ,OACD,QAAS,CACZ,EAAS,KAAK,SACd,KACF,KACK,UAAW,CACd,AAAI,EAAQ,GACV,GAAQ,EAAQ,GAElB,KACF,KACK,YAAa,CAChB,AAAI,EAAQ,EAAK,QACf,GAAQ,EAAQ,GAElB,KACF,EAGF,YAAK,SAAW,EAAK,GAAO,IACrB,CACT,CACF,ECzDA,GAAI,GACA,EACA,EAEA,EAAe,EACf,EAAuB,YACvB,EACA,EACA,EACA,EAGA,EACA,EACA,EAAc,EACd,EACA,EACA,EAEJ,YAAgB,CAGd,GAFA,EAAQ,eAAe,EAEnB,GAAS,EAAY,CACvB,EAAW,KAAK,CAAS,EACzB,MACF,CAEA,GAAI,GAAS,EAAY,CACvB,EAAU,KAAK,aAAM,SAAe,MAAO,CAAS,EACpD,MACF,CAEA,GAAI,GAAS,EAAW,CACtB,EAAU,KAAK,aAAM,QAAc,QAAS,CAAS,EACrD,MACF,CAEA,EAAQ,UAAU,EAAG,EAAG,EAAO,CAAM,EACrC,EAAQ,UAAY,QACpB,EAAQ,SAAS,EAAG,EAAG,EAAO,CAAM,EAEpC,EAAM,KAAK,EAAc,CAAS,EAClC,OAAS,KAAU,GACjB,EAAO,KAAK,EAAc,CAAS,EAGrC,AAAI,GAAS,GAEX,AADgB,GAAI,GAAa,CAAO,EAChC,KAAK,CAAS,CAE1B,CAEA,WAAgB,EAAY,CAC1B,GAAI,GAAS,EACX,OAGF,OAAS,KAAU,GACjB,EAAO,OAAO,CAAE,EAMlB,EAAe,AADb,EAAQ,OAAO,CAAC,EAAO,IAAS,EAAQ,EAAK,UAAW,CAAC,EAAI,EAAQ,OACtC,IAEjC,OAAS,KAAU,GACjB,AAAI,EAAM,QAAQ,EAAO,UAAW,EAAO,SAAS,GAClD,GAAQ,EACR,EAAS,EAAO,MAIpB,OAAS,KAAU,GACjB,AAAI,EAAM,OAAO,EAAO,SAAS,GAC/B,GAAQ,EACR,EAAS,EAAO,KAGtB,CAEA,WAAc,EAAc,CAE1B,GAAI,GAAK,EAAO,EAChB,EAAc,EAEd,EAAO,EAAK,GAAI,EAChB,EAAK,EAEL,OAAO,sBAAsB,CAAI,CACnC,CAEA,YAAmB,CACjB,GAAM,GAAS,OAAO,WAChB,EAAU,OAAO,YACvB,AAAI,EAAS,EACX,GAAQ,EACR,EAAS,GAET,GAAQ,EACR,EAAS,GAEX,EAAO,MAAQ,EACf,EAAO,OAAS,EAEhB,EAAY,CAAE,OAAQ,EAAQ,IAAK,OAAQ,EAAS,GAAI,CAC1D,CAEA,WAAwB,EAAsB,CAC5C,GAAI,GAAS,EAAY,CAEvB,OADA,EAAe,EAAW,UAAU,EAAM,IAAI,EACtC,OACD,YAAa,CAChB,EAAU,EAAO,aAAa,CAAO,EACrC,EAAQ,EACR,KACF,KACK,YAAa,CAChB,EAAU,EAAO,cAAc,CAAO,EACtC,EAAQ,EACR,KACF,EAEF,MACF,CAEA,AAAI,EAAM,MAAQ,SAChB,CAAI,GAAS,EACX,EAAQ,EAER,EAAQ,GAIZ,OAAS,KAAU,GACjB,AAAI,EAAM,MAAQ,EAAO,WACvB,EAAO,OAAO,EAEZ,EAAM,MAAQ,EAAO,aACvB,EAAO,SAAS,EAIpB,GAAI,EAAM,MAAQ,QAAW,IAAS,GAAa,GAAS,GAAa,CACvE,OAAQ,OACD,YAAa,CAChB,EAAU,EAAO,aAAa,CAAO,EACrC,KACF,KACK,YAAa,CAChB,EAAU,EAAO,cAAc,CAAO,EACtC,KACF,EAGF,OAAS,KAAU,GACjB,EAAO,UAAY,EAAM,UAE3B,EAAQ,CACV,CACF,CAEA,YAAgB,CACd,EAAS,SAAS,eAAe,QAAQ,EACzC,EAAQ,EAAO,MACf,EAAS,EAAO,OAEhB,EAAe,IAEf,EAAU,EAAO,WAAW,IAAI,EAChC,OAAO,iBAAiB,UAAW,CAAc,EACjD,OAAO,iBAAiB,SAAU,CAAO,EACzC,EAAQ,EAER,EAAU,EAAO,cAAc,CAAO,EACtC,EAAQ,GAAI,GAAM,CAAO,EACzB,EAAY,GAAI,GAAU,CAAO,EAEjC,EAAa,GAAI,GAAW,CAAO,EAEnC,EAAK,YAAY,IAAI,CAAC,CACxB,CAEA,EAAK",
  "names": []
}
