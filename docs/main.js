(()=>{var l=class{constructor(t,e,i,n,c,b){this.name=t,this.speed=50,this.positionX=200,this.positionY=n,this.targetY=n,this.movementTimer=0,this.context=i,this.color=e,this.upKeyCode=c,this.downKeyCode=b,this.trail=[{x:0,y:n}]}static createPlayer(t){return[new l("right player","orange",t,200,"ArrowUp","ArrowDown")]}static createPlayers(t){return[new l("right player","orange",t,190,"ArrowUp","ArrowDown"),new l("left player","green",t,210,"KeyW","KeyS")]}maxedOutMovement(){return this.movementTimer>0}moveUp(){this.maxedOutMovement()||(this.movementTimer=.25,this.targetY=this.targetY-10)}moveDown(){this.maxedOutMovement()||(this.movementTimer=.25,this.targetY=this.targetY+10)}update(t){this.trail.push({x:this.positionX,y:this.positionY}),this.positionX=this.positionX+this.speed*t;let e;Math.abs(this.targetY-this.positionY)>0?(e=(this.speed-30)*(Math.cos(this.movementTimer/.25*Math.PI)+1),this.targetY-this.positionY>0?this.positionY=Math.min(this.targetY,this.positionY+e*t):this.positionY=Math.max(this.targetY,this.positionY-e*t)):e=this.speed,this.positionX=this.positionX+e*t,this.movementTimer>0&&(this.movementTimer=this.movementTimer-t)}draw(t,e){this.context.resetTransform(),this.drawTrail(t,e)}drawTrail(t,e){this.cutTrail(t);let i=this.context;i.beginPath(),i.lineWidth=2*e.yScale,i.moveTo((this.trail[0].x-t)*e.xScale,this.trail[0].y*e.yScale);for(let n of this.trail)i.lineTo((n.x-t)*e.xScale,n.y*e.yScale);i.strokeStyle=this.color,i.stroke()}cutTrail(t){this.trail=this.trail.filter(e=>e.x>=t-200)}};var p=class{constructor(t){this.startLine=2400;this.end=4300;this.squares=[{x:0,y:0,size:50},{x:0,y:400,size:50},{x:200,y:400,size:50},{x:200,y:0,size:50},{x:400,y:400,size:50},{x:400,y:0,size:50},{x:600,y:400,size:50},{x:600,y:0,size:50},{x:800,y:400,size:50},{x:800,y:0,size:50},{x:1e3,y:400,size:50},{x:1e3,y:0,size:50},{x:1200,y:400,size:50},{x:1200,y:0,size:50},{x:1400,y:400,size:50},{x:1400,y:0,size:50},{x:1600,y:400,size:50},{x:1600,y:0,size:50},{x:1620,y:200,size:50},{x:1800,y:400,size:50},{x:1800,y:0,size:50},{x:2e3,y:400,size:50},{x:2e3,y:0,size:50},{x:2200,y:0,size:50},{x:2200,y:400,size:50},{x:2400,y:0,size:100},{x:2400,y:400,size:100},{x:2600,y:200,size:50},{x:2600,y:0,size:100},{x:2600,y:400,size:100},{x:2750,y:320,size:80},{x:2750,y:200,size:80},{x:2750,y:80,size:80},{x:2900,y:400,size:100},{x:2900,y:200,size:100},{x:2900,y:0,size:100},{x:3300,y:0,size:350},{x:3300,y:400,size:350},{x:3800,y:200,size:150},{x:3800,y:0,size:150},{x:3800,y:400,size:150}];this.context=t}collide(t,e){for(let i of this.squares){let n=i.x-i.size/2;if(t>=n&&t<=n+i.size){let c=i.y-i.size/2;if(e>=c&&e<=c+i.size)return!0}}return!1}finish(t){return t>=this.end}draw(t,e){let i=this.context;i.lineWidth=2*e.yScale;for(let n of this.squares){let c=n.x-n.size/2-t,b=n.y-n.size/2;i.strokeStyle="white",i.strokeRect(c*e.xScale,b*e.yScale,n.size*e.xScale,n.size*e.yScale)}t<2500&&(i.font=`${30*e.yScale}px sans-serif`,i.textAlign="left",i.fillStyle="green",i.fillText("Left is green",(400-t)*e.xScale,300*e.yScale),i.fillText("Use 'w' and 's' to move",(800-t)*e.xScale,300*e.yScale),i.fillStyle="orange",i.fillText("Right is orange",(400-t)*e.xScale,130*e.yScale),i.fillText("Use 'up' and 'down' to move",(800-t)*e.xScale,130*e.yScale),i.fillStyle="grey",i.fillText("avoid the squares =>",(1300-t)*e.xScale,210*e.yScale),i.fillStyle="grey",i.fillText("get to finish first!",(1900-t)*e.xScale,210*e.yScale),i.beginPath(),i.moveTo((this.startLine-t)*e.xScale,50*e.yScale),i.lineTo((this.startLine-t)*e.xScale,350*e.yScale),i.strokeStyle="grey",i.stroke()),i.beginPath(),i.moveTo((4300-t)*e.xScale,0*e.yScale),i.lineTo((4300-t)*e.xScale,400*e.yScale),i.strokeStyle="grey",i.stroke()}};var g=class{constructor(t){this.context=t}draw(t,e,i){let n=this.context;n.fillStyle=e,n.fillRect(0,0,400*i.xScale,400*i.yScale),n.font=`${30*i.yScale}px sans-serif`,n.textAlign="center",n.fillStyle="black",n.fillText(t,200*i.xScale,200*i.yScale),n.font=`${20*i.yScale}px sans-serif`,n.fillText("press 'r' to restart",200*i.xScale,230*i.yScale)}};var d=class{constructor(t){this.context=t}draw(t){let e=this.context;e.fillStyle="rgba(20,20,20,0.8)",e.fillRect(0,0,400*t.xScale,400*t.yScale),e.globalAlpha=2,e.font=`${30*t.yScale}px sans-serif`,e.textAlign="center",e.fillStyle="white",e.fillText("paused",200*t.xScale,200*t.yScale)}};var m=[{key:"start-1-p",title:"start single player game",color:"orange"},{key:"start-2-p",title:"start two player game",color:"green"}],S=28,z=class{constructor(t){this.context=t;this.selected=m[0].key}draw(t){let e=this.context;e.fillStyle="black",e.fillRect(0,0,400*t.xScale,400*t.yScale),e.font=`${S*t.yScale}px sans-serif`,e.textAlign="left";let i=200-m.length*S/2;m.forEach((n,c)=>{this.selected==n.key?e.fillStyle=n.color:e.fillStyle="grey",e.fillText(n.title,S*t.xScale,(i+(c+1)*S)*t.yScale)})}handleKey(t){let e=m.findIndex(n=>n.key==this.selected),i="stay";switch(t){case"Enter":{i=this.selected;break}case"ArrowUp":{e>0&&(e=e-1);break}case"ArrowDown":{e<m.length&&(e=e+1);break}}return this.selected=m[e].key,i}};var a,v,u,s=0,T="start-1-p",Y,R,C,D,h,o,k=0,x,f,y;function A(){if(o.resetTransform(),s==0){D.draw(y);return}if(s==3){C.draw(`\u{1F648} ${Y} lost`,"red",y);return}if(s==4){C.draw(`\u{1F680} ${R} won`,"green",y);return}o.clearRect(0,0,x,f),o.fillStyle="black",o.fillRect(0,0,x,f),u.draw(v,y);for(let r of a)r.draw(v,y);s==2&&new d(o).draw(y)}function K(r){if(s!=1)return;for(let e of a)e.update(r);v=a.reduce((e,i)=>e+i.positionX,0)/a.length-200;for(let e of a)u.collide(e.positionX,e.positionY)&&(s=3,Y=e.name);for(let e of a)u.finish(e.positionX)&&(s=4,R=e.name)}function M(r){let t=r-k;k=r,K(t/1e3),A(),window.requestAnimationFrame(M)}function w(){let r=window.innerWidth,t=window.innerHeight;r>t?(x=t,f=t):(x=r,f=r),h.width=x,h.height=f,y={xScale:x/400,yScale:f/400}}function L(r){if(s==0){switch(T=D.handleKey(r.code),T){case"start-1-p":{a=l.createPlayer(o),s=1;break}case"start-2-p":{a=l.createPlayers(o),s=1;break}}return}r.code=="Space"&&(s==1?s=2:s=1);for(let t of a)r.code==t.upKeyCode&&t.moveUp(),r.code==t.downKeyCode&&t.moveDown();if(r.code=="KeyR"&&(s==4||s==3)){switch(T){case"start-1-p":{a=l.createPlayer(o);break}case"start-2-p":{a=l.createPlayers(o);break}}for(let t of a)t.positionX=u.startLine;s=1}}function X(){h=document.getElementById("canvas"),x=h.width,f=h.height,v=200,o=h.getContext("2d"),window.addEventListener("keydown",L),window.addEventListener("resize",w),w(),a=l.createPlayers(o),u=new p(o),C=new g(o),D=new z(o),M(performance.now())}X();})();
//# sourceMappingURL=main.js.map
